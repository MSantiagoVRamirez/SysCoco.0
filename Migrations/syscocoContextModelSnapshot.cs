// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SysCoco._0.Models;

#nullable disable

namespace SysCoco._0.Migrations
{
    [DbContext(typeof(syscocoContext))]
    partial class syscocoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SysCoco._0.Models.Actividad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("creador")
                        .HasColumnType("int");

                    b.Property<int>("cursoid")
                        .HasColumnType("int");

                    b.Property<string>("documentoAdjunto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaenvio")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("creador");

                    b.HasIndex("cursoid");

                    b.ToTable("Actividad");
                });

            modelBuilder.Entity("SysCoco._0.Models.Asistencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaAsistencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuariosId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CursoId");

                    b.HasIndex("usuariosId");

                    b.ToTable("Asistencia");
                });

            modelBuilder.Entity("SysCoco._0.Models.Buzon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("usuariosId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usuariosId");

                    b.ToTable("Buzon");
                });

            modelBuilder.Entity("SysCoco._0.Models.Comunicado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ArchivoAdjunto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("destinatario")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("remitente")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("destinatario");

                    b.HasIndex("remitente");

                    b.ToTable("Comunicado");
                });

            modelBuilder.Entity("SysCoco._0.Models.Cursos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("materiaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("materiaid");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("SysCoco._0.Models.Encuesta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("pregunta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("tipoPregunta")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usuarioId");

                    b.ToTable("Encuesta");
                });

            modelBuilder.Entity("SysCoco._0.Models.Materia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("usuariosid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usuariosid");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("SysCoco._0.Models.Mensaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("archivoAdjunto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("destinatario")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("remitente")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("destinatario");

                    b.HasIndex("remitente");

                    b.ToTable("Mensaje");
                });

            modelBuilder.Entity("SysCoco._0.Models.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Nombre")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SysCoco._0.Models.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("numeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("numeroTelefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("rolesid")
                        .HasColumnType("int");

                    b.Property<string>("tipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("rolesid");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SysCoco._0.Models.Votacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("encuestaId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("encuestaId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Votacion");
                });

            modelBuilder.Entity("SysCoco._0.Models.Actividad", b =>
                {
                    b.HasOne("SysCoco._0.Models.Usuarios", "ActividadUsuarios")
                        .WithMany()
                        .HasForeignKey("creador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SysCoco._0.Models.Cursos", "cursos")
                        .WithMany()
                        .HasForeignKey("cursoid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActividadUsuarios");

                    b.Navigation("cursos");
                });

            modelBuilder.Entity("SysCoco._0.Models.Asistencia", b =>
                {
                    b.HasOne("SysCoco._0.Models.Cursos", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SysCoco._0.Models.Usuarios", "FkUsuarios")
                        .WithMany()
                        .HasForeignKey("usuariosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("FkUsuarios");
                });

            modelBuilder.Entity("SysCoco._0.Models.Buzon", b =>
                {
                    b.HasOne("SysCoco._0.Models.Usuarios", "buzonUsuario")
                        .WithMany()
                        .HasForeignKey("usuariosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("buzonUsuario");
                });

            modelBuilder.Entity("SysCoco._0.Models.Comunicado", b =>
                {
                    b.HasOne("SysCoco._0.Models.Usuarios", "comunicadoDestinatario")
                        .WithMany()
                        .HasForeignKey("destinatario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SysCoco._0.Models.Usuarios", "comunicadoRemitente")
                        .WithMany()
                        .HasForeignKey("remitente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("comunicadoDestinatario");

                    b.Navigation("comunicadoRemitente");
                });

            modelBuilder.Entity("SysCoco._0.Models.Cursos", b =>
                {
                    b.HasOne("SysCoco._0.Models.Materia", "materia")
                        .WithMany()
                        .HasForeignKey("materiaid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("materia");
                });

            modelBuilder.Entity("SysCoco._0.Models.Encuesta", b =>
                {
                    b.HasOne("SysCoco._0.Models.Usuarios", "EncuestaUsuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EncuestaUsuario");
                });

            modelBuilder.Entity("SysCoco._0.Models.Materia", b =>
                {
                    b.HasOne("SysCoco._0.Models.Usuarios", "materiaUsuarios")
                        .WithMany()
                        .HasForeignKey("usuariosid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("materiaUsuarios");
                });

            modelBuilder.Entity("SysCoco._0.Models.Mensaje", b =>
                {
                    b.HasOne("SysCoco._0.Models.Usuarios", "mensajeDestinatario")
                        .WithMany()
                        .HasForeignKey("destinatario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SysCoco._0.Models.Usuarios", "mensajeRemitente")
                        .WithMany()
                        .HasForeignKey("remitente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("mensajeDestinatario");

                    b.Navigation("mensajeRemitente");
                });

            modelBuilder.Entity("SysCoco._0.Models.Usuarios", b =>
                {
                    b.HasOne("SysCoco._0.Models.Roles", "roles")
                        .WithMany()
                        .HasForeignKey("rolesid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("roles");
                });

            modelBuilder.Entity("SysCoco._0.Models.Votacion", b =>
                {
                    b.HasOne("SysCoco._0.Models.Encuesta", "Encuesta")
                        .WithMany()
                        .HasForeignKey("encuestaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SysCoco._0.Models.Usuarios", "votacionUsuario")
                        .WithMany()
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Encuesta");

                    b.Navigation("votacionUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
